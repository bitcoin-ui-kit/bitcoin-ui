# This workflow is used to run the OpenAgentic assessment on the codebase.
# It creates a pull request with the changes made by the OpenAgentic assessment.

name: AI-Code-Analysis

permissions:
  contents: write
  pull-requests: write
  packages: write

on:
  pull_request:
    branches: [ "main" ]

jobs:
  ai-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22.7
          cache: pnpm

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Check for existing PR
        id: check-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if a PR exists from ai/code-improve branch
          existing_pr=$(gh pr list --head ai/code-improve --state open --json number --jq '.[0].number // empty')
          
          if [ -n "$existing_pr" ]; then
            echo "Found existing PR #$existing_pr from ai/code-improve branch"
            echo "skip_assessment=true" >> $GITHUB_OUTPUT
          else
            echo "No existing PR found from ai/code-improve branch"
            echo "skip_assessment=false" >> $GITHUB_OUTPUT
          fi

      - name: Run OpenAgentic assessment
        id: assess
        if: steps.check-pr.outputs.skip_assessment == 'false'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          node scripts/run-code-assessment.js

      - name: Apply patches
        if: steps.check-pr.outputs.skip_assessment == 'false' && steps.assess.outputs.hadChanges == 'true'
        run: |
          echo "Applying patches from file..."
          
          if [ ! -f "$PATCH_FILE" ]; then
            echo "Error: Patch file not found: $PATCH_FILE"
            exit 1
          fi
          
          echo "Patch file size: $(wc -c < $PATCH_FILE) bytes"
          echo "Patch content preview:"
          head -20 "$PATCH_FILE"
          
          # Apply the patch from file
          git apply --reject --verbose --whitespace=fix "$PATCH_FILE" || {
            echo "Failed to apply patch. Full patch content:"
            cat "$PATCH_FILE"
            echo "Git status:"
            git status
            exit 1
          }
        env:
          PATCH_FILE: ${{ steps.assess.outputs.patchFile }}

      - name: Commit & PR
        if: steps.check-pr.outputs.skip_assessment == 'false' && steps.assess.outputs.hadChanges == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ai/code-improve
          title: "AI: automated code improvements"
          body: ${{ steps.assess.outputs.prBody }}
          base: ${{ github.head_ref || github.ref_name }}
